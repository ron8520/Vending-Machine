/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    id 'org.openjfx.javafxplugin' version '0.0.8'
    id 'jacoco'
}

javafx {
    version = "12.0.2"
    modules = ['javafx.controls', 'javafx.swing', 'javafx.media', 'javafx.fxml']
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.2-jre'

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'

    testImplementation 'junit:junit:4.12'

    //import the third part module for GUI design
    compile 'com.jfoenix:jfoenix:9.0.10'

    // Add Json
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

    // Add JDBC and postgresql
    compile files('libs/ojbdc7.jar')
    compile files('libs/postgresql-42.2.18.jar')

}

application {
    // Define the main class for the application.
    mainClassName = 'W14B_G4_Assignment2.App'
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}
test {
    finalizedBy jacocoTestReport
}
jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/jacoco")
}
jacocoTestReport {
    dependsOn test
}
